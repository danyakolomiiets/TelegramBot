import os
import re
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ChatPermissions
from aiogram.fsm.storage.memory import MemoryStorage
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∏–¥–∏—Ç –ª–∏ –±–æ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ BOT_TOKEN: {TOKEN}")

if not TOKEN:
    raise ValueError("üö® –û—à–∏–±–∫–∞! BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å .env –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(storage=MemoryStorage())

# –°—Ç–æ–ø-—Å–ª–æ–≤–∞ –∏ –ª–∏–º–∏—Ç —ç–º–æ–¥–∑–∏
STOP_WORDS = {"–∑–∞—Ä–∞–±–æ—Ç–æ–∫", "—Ä–∞–±–æ—Ç–∞", "–∫–æ–º–∞–Ω–¥–∞"}
EMOJI_PATTERN = re.compile(r'[\U0001F300-\U0001F6FF]', re.UNICODE)  # –ü–æ–∏—Å–∫ —ç–º–æ–¥–∑–∏
MESSAGE_LIMIT = 5  # –õ–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π

# –•—Ä–∞–Ω–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_messages = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def get_user_messages_count(chat_id: int, user_id: int):
    chat = await bot.get_chat(chat_id)
    members = await bot.get_chat_administrators(chat_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∞–¥–º–∏–Ω–∞—Ö (–Ω–µ –±–∞–Ω–∏–º –∞–¥–º–∏–Ω–æ–≤)
    for member in members:
        if member.user.id == user_id:
            return MESSAGE_LIMIT + 1  # –î–µ–ª–∞–µ–º –≤–∏–¥, —á—Ç–æ –æ–Ω –æ—Ç–ø—Ä–∞–≤–∏–ª –±–æ–ª—å—à–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π

    return user_messages.get((chat_id, user_id), 0)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def check_message(message: types.Message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    text = message.text.lower()

    # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_messages[(chat_id, user_id)] = user_messages.get((chat_id, user_id), 0) + 1
    msg_count = await get_user_messages_count(chat_id, user_id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Ç–æ–ø-—Å–ª–æ–≤
    if any(word in text for word in STOP_WORDS):
        if msg_count < MESSAGE_LIMIT:
            await bot.ban_chat_member(chat_id, user_id)
            await message.answer(f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –∑–∞–±–∞–Ω–µ–Ω –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª.")
            return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–º–æ–¥–∑–∏
    if len(EMOJI_PATTERN.findall(text)) > 5:
        if msg_count < MESSAGE_LIMIT:
            await bot.ban_chat_member(chat_id, user_id)
            await message.answer(f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –∑–∞–±–∞–Ω–µ–Ω –∑–∞ —Å–ø–∞–º —ç–º–æ–¥–∑–∏.")
            return

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())